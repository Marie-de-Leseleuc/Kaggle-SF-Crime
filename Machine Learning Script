----- Personal Script -----------------------------------------------------------------
---------------------------------------------------------------------------------------
  
  ## Goal: Predict category of crime
  
  #Set directory
  
  setwd("C:\\Users\\mdeleseleuc\\Documents")

#Read document

train <- read.csv("train.csv", header = TRUE,sep = ",")
test <- read.csv("test.csv", header = TRUE,sep = ",")

head(test)
head(train)

# Alternative 

Train <- read.csv("Train.csv", stringsAsFactors=FALSE)

# Verify type 

str(train$X) 

# Let's combine the documents

train$Id <- NA
test$Category <- NA
test$Descript <- NA
test$Resolution <- NA
combi <- rbind(train, test)

head(combi)

# Extract month, year, date & hours from Dates 

combi$Hours <- format(as.POSIXct(combi$Dates, format="%Y-%m-%d %H:%M:%S"), format="%H:%M:%S") # type = chr

combi$Dates2 <- as.Date(combi$Dates, format="%Y-%m-%d") # type = Date

combi$Year <- format(Dates,'%Y')
combi$Month <- format(Dates,'%m')
combi$Day <- format(Dates,'%d')
combi$Week <- format(Dates,'%W')

# Create a Location variable 

Loc <- paste0('(',round(X,2),',',round(X,2),')') 

# Create a new factor: Morning; Evening; Night

#Evening = 6:00 PM - 9:00 PM
#Night = 9:00 PM - 11:59 PM
#Midnight = 12:00 AM
#Morning = 12:01 AM - 11:59 AM 

library(lubridate)

combi$Time <- (hour(strptime(combi$Hours, format = "%T",tz=""))
               + minute(strptime(combi$Hours, format = "%T",tz=""))/60 
               + second(strptime(combi$Hours, format = "%T",tz=""))/3600) # type = num

aMidnight <- (hour(strptime('00:00:00', format = "%T")) 
              + minute(strptime('00:00:00', format = "%T"))/60 
              + second(strptime('00:00:00', format = "%T"))/3600)

bNoon <- (hour(strptime('11:59:59', format = "%T")) 
          + minute(strptime('11:59:59', format = "%T"))/60 
          + second(strptime('11:59:59', format = "%T"))/3600)

Noon <- (hour(strptime('12:00:00', format = "%T")) 
         + minute(strptime('12:00:00', format = "%T"))/60 
         + second(strptime('12:00:00', format = "%T"))/3600)

bEvening <- (hour(strptime('17:59:59', format = "%T")) 
             + minute(strptime('17:59:59', format = "%T"))/60 
             + second(strptime('17:59:59', format = "%T"))/3600)

Evening <- (hour(strptime('18:00:00', format = "%T")) 
            + minute(strptime('18:00:00', format = "%T"))/60 
            + second(strptime('18:00:00', format = "%T"))/3600)

bNight <- (hour(strptime('20:59:59', format = "%T")) 
           + minute(strptime('20:59:59', format = "%T"))/60 
           + second(strptime('20:59:59', format = "%T"))/3600)

Night <- (hour(strptime('21:00:00', format = "%T")) 
          + minute(strptime('21:00:00', format = "%T"))/60 
          + second(strptime('21:00:00', format = "%T"))/3600)

Midnight <- (hour(strptime('23:59:59', format = "%T")) 
             + minute(strptime('23:59:59', format = "%T"))/60 
             + second(strptime('23:59:59', format = "%T"))/3600)

combi$Period[(combi$Time >= aMidnight) & (combi$Time <= bNoon)] <- 'Morning' # type = chr
combi$Period[(combi$Time >= Noon) & (combi$Time <= bEvening)] <- 'Afternoon'
combi$Period[(combi$Time >= Evening) & (combi$Time <= bNight) ] <- 'Evening'
combi$Period[(combi$Time >= Night) & (combi$Time <= Midnight) ] <- 'Night'

# Create a new factor: Spring; Summer; Automn; Winter 

combi$Seasona <- as.numeric(paste(format(combi$Dates2, "%m"), 
                                  format(combi$Dates2, "%d"), sep = "", collapse = NULL))


combi$Season[combi$Seasona >= 320 & combi$Seasona < 621] <- 'Spring' # type = chr
combi$Season[combi$Seasona >= 621 & combi$Seasona < 923 ] <- 'Summer'
combi$Season[combi$Seasona >= 923 & combi$Seasona < 1222 ] <- 'Automn'
combi$Season[combi$Seasona >= 1222 | combi$Seasona < 320 ] <- 'Winter'

# Create a new factor: Block; Individual (type of habitation)

combi$Housing[which(grepl("Block", as.character(combi$Address)) == TRUE)] <- "Block" # type = chr
combi$Housing[which(grepl("Block", as.character(combi$Address)) == FALSE)] <- "App/House"      

# Create a new factor: Street suffix (AV, BL, CR, CT, DR, HY, LN, PL, PZ, RD, ST, TR, WY)

combi$Street[which(grepl("AV", as.character(combi$Address)) == TRUE)] <- "AV" # type = chr
combi$Street[which(grepl("BL", as.character(combi$Address)) == TRUE)] <- "BL" 
combi$Street[which(grepl("CR", as.character(combi$Address)) == TRUE)] <- "CR"  
combi$Street[which(grepl("CT", as.character(combi$Address)) == TRUE)] <- "CT"
combi$Street[which(grepl("DR", as.character(combi$Address)) == TRUE)] <- "DR" 
combi$Street[which(grepl("HY", as.character(combi$Address)) == TRUE)] <- "HY"
combi$Street[which(grepl("LN", as.character(combi$Address)) == TRUE)] <- "LN" 
combi$Street[which(grepl("PL", as.character(combi$Address)) == TRUE)] <- "PL"  
combi$Street[which(grepl("PZ", as.character(combi$Address)) == TRUE)] <- "PZ"
combi$Street[which(grepl("RD", as.character(combi$Address)) == TRUE)] <- "RD" 
combi$Street[which(grepl("ST", as.character(combi$Address)) == TRUE)] <- "ST"
combi$Street[which(grepl("TR", as.character(combi$Address)) == TRUE)] <- "TR" 
combi$Street[which(grepl("WY", as.character(combi$Address)) == TRUE)] <- "WY"

# Let's create a new category for the crimes

white_crime=c("FRAUD", "FORGERY/COUNTERFEITING", "BAD CHECKS" , "EXTORTION", "EMBEZZLEMENT", "SUSPICIOUS OCC",
              "BRIBERY")

blue_crime=c("VANDALISM", "LARCENY/THEFT", "STOLEN PROPERTY", "ROBBERY", "DRIVING UNDER THE INFLUENCE",
             "DISORDERLY CONDUCT", "LIQUOR LAWS", "VEHICLE THEFT", "ASSAULT", "KIDNAPPING", "TRESPASS", 
             "ARSON", "RECOVERED VEHICLE")

other_crime=c("MISSING PERSON", "RUNAWAY", "FAMILY OFFENSES", "SEX OFFENSES NON FORCIBLE",
              "PORNOGRAPHY/OBSCENE MAT", "WEAPON LAWS", "DRUNKENNESS", "SUICIDE", "TREA",
              "DRUG/NARCOTIC", "SEX OFFENSES FORCIBLE",  "LOITERING")

# Back to factor

#combi$Dates2 <- factor(combi$Dates2) #Not sure!
#combi$Year <- factor(combi$Year) #Not sure!
#combi$Month <- factor(combi$Month) #Not sure!
#combi$Hours <- factor(combi$Hours) #Not sure!
combi$Housing <- factor(combi$Housing)  
combi$Season <- factor(combi$Season)
combi$Period <- factor(combi$Period)
combi$Street <- factor(combi$Street)

# Let's break them appart

attach(combi)

head(combi)

head(combi[,c('Id','Dates','Category', 'Descript', 'DayOfWeek', 'PdDistrict'
              ,'Resolution','Address', 'X', 'Y', 'Id', 'Hours','Dates2','Period', 'Housing'
              ,'Season')])

train <- combi[is.na(Id) == TRUE, c('Dates','Category', 'Descript', 'DayOfWeek', 'PdDistrict'
                                    ,'Resolution','Address', 'X', 'Y', 'Id', 'Hours','Dates2','Period', 'Housing'
                                    ,'Season')]
test <- combi[is.na(Id) == FALSE, c('Id','Dates','Category', 'DayOfWeek', 'PdDistrict'
                                    ,'Address', 'X', 'Y', 'Id', 'Hours','Dates2','Period', 'Housing'
                                    ,'Season')]


# Partition the train document 

inTrain <- createDataPartition(train$Category,p=0.1,list=F)
train.sub <- train[inTrain,]

# Use a random Tree 

library(rpart)

fit <- rpart(Category ~ Dates2 + Hours + DayOfWeek + PdDistrict + Address + X + Y + Period + 
               Housing + Season, data = train, method = "class")

library(rattle)
library(rpart.plot)
library(RColorBrewer)

fancyRpartPlot(fit)

# Submit first prediction

Prediction <- predict(fit, test)
submit <- data.frame(Id = test$Id, Category = Prediction)
write.csv(submit, file = "firstPrediction.csv", row.names = FALSE)

# Use a logit regression 

fitlogit <- glm(Category ~ Dates2 + Hours + DayOfWeek + PdDistrict + Address + X + Y + Period + 
                  Housing + Season, data = train, family = "binomial") # should we use factor(Category)?

pred <- predict(fit,test, type = "response")

--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
  
